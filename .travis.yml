sudo: required
dist: precise
language: cpp

git:
    depth: 5

branches:
    except: /pr\/.*/

env:
    matrix:
        - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
    apt:
        packages:
            - valgrind
        sources: &sources
            - ubuntu-toolchain-r-test

matrix:
    fast_finish: true
    allow_failures:
        - os: osx
    exclude:
        - env: TRAVIS_EMPTY_JOB_WORKAROUND=true
    include:
        # clang
        # 3.9
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=clang++-3.9 COMPILER_C=clang-3.9 COMPILER_APT=clang-3.9
          compiler: clang
        # 3.8
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=clang++-3.8 COMPILER_C=clang-3.8 COMPILER_APT=clang-3.8
          compiler: clang
        # 3.7
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=clang++-3.7 COMPILER_C=clang-3.7 COMPILER_APT=clang-3.7
          compiler: clang
        # 3.6
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=clang++-3.6 COMPILER_C=clang-3.6 COMPILER_APT=clang-3.6
          compiler: clang

        # gcc
        # 6.2
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=g++-6 COMPILER_C=gcc-6 COMPILER_APT=g++-6
          compiler: gcc
        # 5.4
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=g++-5 COMPILER_C=gcc-5 COMPILER_APT=g++-5
          compiler: gcc
        # 4.9
        - os: linux
          env: TESTS=ON LLVM_VERSION=default COMPILER_CXX=g++-4.9 COMPILER_C=gcc-4.9 COMPILER_APT=g++-4.9
          compiler: gcc

        # xcode (osx)
        # 8
        - os: osx
          env: TESTS=ON LLVM_VERSION=default
          osx_image: xcode8
        # 7.3
        - os: osx
          env: TESTS=ON LLVM_VERSION=default
          osx_image: xcode7.3
        # 6.4
        - os: osx
          env: TESTS=ON LLVM_VERSION=default
          osx_image: xcode6.4

        # Different LLVM version
        # 3.8
        #- os: linux
        #  env: TESTS=ON LLVM_VERSION=3.8 COMPILER_CXX=clang++-3.8 COMPILER_C=clang-3.8 COMPILER_APT=clang-3.8
        #  compiler: clang
        # 3.7
        #- os: linux
        #  env: TESTS=ON LLVM_VERSION=3.7 COMPILER_CXX=clang++-3.7 COMPILER_C=clang-3.7 COMPILER_APT=clang-3.7
        #  compiler: clang

install:
    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}

    - if [ "${LLVM_VERSION}" == "default" ]; then LLVM_VERSION=3.9; fi

    - |
        if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
            CMAKE_URL="https://cmake.org/files/v3.6/cmake-3.6.1-Linux-x86_64.tar.gz"
            mkdir -p cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
            export PATH=${DEPS_DIR}/cmake/bin:${PATH}
        else
            if ! brew ls --version cmake &> /dev/null; then brew install cmake; fi
        fi

    - |
        if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
            sudo add-apt-repository "deb http://apt.llvm.org/precise/ llvm-toolchain-precise-3.6 main"
            sudo add-apt-repository "deb http://apt.llvm.org/precise/ llvm-toolchain-precise-3.7 main"
            sudo add-apt-repository "deb http://apt.llvm.org/precise/ llvm-toolchain-precise-3.8 main"
            sudo add-apt-repository "deb http://apt.llvm.org/precise/ llvm-toolchain-precise-3.9 main"
            wget -O - http://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -

            sudo apt-get update -qq
            sudo apt-get -yq --no-install-suggests --no-install-recommends --force-yes install ${COMPILER_APT} libllvm${LLVM_VERSION} llvm-${LLVM_VERSION} llvm-${LLVM_VERSION}-dev
        fi

script:
    - cd ${TRAVIS_BUILD_DIR}
    - mkdir build
    - cd build
    - |
        if [ "${TRAVIS_OS_NAME}" == "linux" ]; then
            cmake -G "Unix Makefiles" -DCMAKE_CXX_COMPILER=${COMPILER_CXX} -DCMAKE_C_COMPILER=${COMPILER_C} -DLLVM_DIR=/usr/lib/llvm-${LLVM_VERSION} -DBUILD_TESTS=${TESTS} ..
        else
            cmake -G "Unix Makefiles" -DLLVM_DIR=/usr/lib/llvm-${LLVM_VERSION} -DBUILD_TESTS=${TESTS} ..
        fi
    - make -j2
    - cd ..
    - if [ "${TESTS}" == "ON" ]; then valgrind ./bin/tests ; fi
